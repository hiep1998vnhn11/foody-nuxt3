import{a as u,o as f,b,l as h,r as c,m as t,f as l,p as d,u as v}from"./entry.ad7b1a50.js";const g={},_={class:"animate-pulse rounded overflow-hidden"},y=h('<div class="w-full bg-gray-300 h-28"></div><div class="flex-1 space-y-6 py-1"><div class="h-6 bg-gray-300 rounded w-3/4"></div><div class="space-y-3"><div class="h-2 bg-gray-300 rounded"></div><div class="grid grid-cols-3 gap-4"><div class="h-2 bg-gray-300 rounded col-span-2"></div><div class="h-2 bg-gray-300 rounded col-span-1"></div></div><div class="h-2 bg-gray-300 rounded"></div></div><div class="h-6 bg-gray-300 rounded-xl w-1/4 inline-block"></div><div class="h-6 bg-gray-300 rounded-xl w-1/2 inline-block mx-3"></div></div>',2),p=[y];function m(i,s){return f(),b("div",_,p)}const O=u(g,[["render",m]]);function w(i){const s=c(null),n=r=>{!s.value||!r||(Array.isArray(r)?r.forEach(e=>e&&s.value.unobserve(e)):s.value.unobserve(r))},a=r=>{!s.value||!r||(Array.isArray(r)?r.forEach(e=>e&&s.value.observe(e)):s.value.observe(r))};t(()=>v(i),(r,e)=>{!s.value||(e&&n(e),r&&a(r))},{deep:!0}),l(()=>{s.value=new IntersectionObserver(r=>{r.forEach(e=>{e.isIntersecting?e.target.classList.add("is-visible"):e.target.classList.remove("is-visible")})},{root:null,rootMargin:"0px",threshold:0})}),d(()=>{s.value.disconnect(),s.value=null})}function A(i,s){typeof s!="function"&&console.error("useScrollObserver: callback is required and must be a function");const n=c(null),a=e=>{!n.value||!e||(Array.isArray(e)?e.forEach(o=>n.value.unobserve(o)):n.value.unobserve(e))},r=e=>{!n.value||!e||(Array.isArray(e)?e.forEach(o=>n.value.observe(o)):n.value.observe(e))};t(()=>v(i),(e,o)=>{!n.value||(o&&a(o),e&&r(e))}),l(()=>{n.value=new IntersectionObserver(e=>{e.forEach(o=>{o.isIntersecting&&s()})},{root:null,rootMargin:"0px",threshold:0})}),d(()=>{n.value.disconnect(),n.value=null})}export{O as _,A as a,w as u};
